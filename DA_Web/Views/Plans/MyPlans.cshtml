@model IEnumerable<DA_Web.Models.Tour>
@using DA_Web.Models.Enums

@{
    ViewData["Title"] = "L·ªãch tr√¨nh c·ªßa t√¥i";
}

@section Styles {
    <link rel="stylesheet" href="~/styles/Plans/MyPlans.css" asp-append-version="true" />
}

@{
    (string, string, string) GetStatusInfo(TourStatus status)
    {
        return status switch
        {
            TourStatus.approved => ("approved", "ƒê√£ duy·ªát", "L·ªãch tr√¨nh c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c duy·ªát v√† hi·ªÉn th·ªã c√¥ng khai."),
            TourStatus.rejected => ("rejected", "B·ªã t·ª´ ch·ªëi", "L·ªãch tr√¨nh c·ªßa b·∫°n ƒë√£ b·ªã t·ª´ ch·ªëi. Vui l√≤ng ch·ªânh s·ª≠a v√† g·ª≠i l·∫°i."),
            _ => ("pending", "Ch·ªù duy·ªát", "L·ªãch tr√¨nh c·ªßa b·∫°n ƒëang ch·ªù qu·∫£n tr·ªã vi√™n x√©t duy·ªát."),
        };
    }
}

<div class="user-tours-container">
    <div class="page-header">
        <h1>@ViewData["Title"]</h1>
        <a asp-controller="Plans" asp-action="Create" class="btn btn-primary create-tour-btn">
            <i class="bi bi-plus-circle"></i> T·∫°o L·ªãch tr√¨nh m·ªõi
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="empty-state">
            <div class="empty-icon">üèñÔ∏è</div>
            <h3>B·∫°n ch∆∞a c√≥ l·ªãch tr√¨nh n√†o</h3>
            <p>H√£y b·∫Øt ƒë·∫ßu t·∫°o l·ªãch tr√¨nh ƒë·∫ßu ti√™n c·ªßa b·∫°n.</p>
            <a asp-controller="Plans" asp-action="Create" class="btn btn-primary create-first-tour-btn">T·∫°o l·ªãch tr√¨nh ngay</a>
        </div>
    }
    else
    {
        <div class="user-tour-list">
            @foreach (var tour in Model)
            {
                var (statusClass, statusText, statusMessage) = GetStatusInfo(tour.Status);

                <div class="user-tour-item">
                    <div class="tour-preview">
                        <div class="tour-image">
                            <img src="@Url.Content(tour.Image ?? "~/images/placeholder.jpg")" alt="@tour.Destination" onerror="this.onerror=null;this.src='/images/placeholder.jpg';" />
                        </div>
                        <div class="tour-details">
                            <h3 class="tour-title">@tour.Destination</h3>
                            <div class="tour-info">
                                <p><strong>Kh·ªüi h√†nh:</strong> @tour.DepartureFrom</p>
                                <p><strong>Th·ªùi gian:</strong> @tour.Duration</p>
                            </div>
                            <div class="tour-status">
                                <div class="status-badge @statusClass">
                                    @statusText
                                </div>
                                <p class="status-message">@statusMessage</p>
                            </div>
                        </div>
                    </div>
                    <div class="tour-actions">
                        <a asp-controller="Plans" asp-action="Details" asp-route-id="@tour.Id" class="btn btn-info">Xem chi ti·∫øt</a>

                        <a asp-controller="Plans" asp-action="Edit" asp-route-id="@tour.Id" class="btn btn-warning">Ch·ªânh s·ª≠a</a>

                        <button type="button" class="btn btn-danger delete-btn" data-id="@tour.Id" data-name="@tour.Destination">X√≥a</button>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const deleteButtons = document.querySelectorAll('.delete-btn');
            deleteButtons.forEach(button => {
                button.addEventListener('click', function(e) {
                    const tourId = e.target.dataset.id;
                    const tourName = e.target.dataset.name;

                    if (confirm(`B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a l·ªãch tr√¨nh "${tourName}" kh√¥ng? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c.`)) {
                        // We need the RequestVerificationToken
                        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                        fetch(`/plans/delete/${tourId}`, {
                            method: 'POST',
                            headers: {
                                'RequestVerificationToken': token,
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert(data.message);
                                // Find the tour item and remove it from the view
                                e.target.closest('.user-tour-item').remove();
                            } else {
                                alert(`L·ªói: ${data.message}`);
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('ƒê√£ x·∫£y ra l·ªói kh√¥ng mong mu·ªën khi x√≥a.');
                        });
                    }
                });
            });
        });
    </script>
} 